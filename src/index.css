body {
  /* This ensures the body takes up the whole screen and content can be centered vertically */
  min-height: 100vh;
  width: 100vw;
  display: flex;
  justify-content: center;
  align-items: flex-start; /* Start content at the top, not center (useful for long pages) */
  padding: 0;
  margin: 0;
}

.App-container {
  /* This container holds all your components */
  display: flex;
  flex-direction: column;
  align-items: center;
  padding: 40px 20px;
  width: 100%;
  max-width: 600px; /* Optional: Constrain width for better look */
  /* Using light mode colors for the App background */
  background-color: #f4f4f9; 
  color: #213547;
}

.app-header {
  text-align: center;
  margin-bottom: 30px;
}

.app-header h1 {
  /* Adjust size for a main title */
  font-size: 2.5em;
  color: #333;
  margin-bottom: 0.2em;
}

.app-header .description {
  font-size: 1.1em;
  color: #666;
}

.app-header .card-count {
  font-size: 0.9em;
  color: #888;
  margin-top: 10px;
}

/* ============================================================== */
/* --- FLASHCARD FLIP EFFECT STYLES --- */
/* ============================================================== */

.flashcard {
  /* Dimensions */
  width: 350px;
  height: 250px;
  
  /* Appearance */
  background-color: transparent; /* Must be transparent to see both sides */
  border: 1px solid #ccc;
  border-radius: 12px;
  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
  cursor: pointer;
  margin: 20px auto;
  
  /* 3D Setup (Crucial for flipping) */
  position: relative;
  transform-style: preserve-3d; /* Allows the front/back sides to exist in 3D space */
  transition: transform 0.6s; /* The duration of the flip animation */
}

/* When the 'flipped' class is applied by React, rotate the entire card container 180 degrees */
.flashcard.flipped {
  transform: rotateY(180deg);
}


/* --- CARD CONTENT WRAPPER (FRONT & BACK) --- */

/* This div will hold the content and act as the side of the card */
.card-content {
  position: absolute;
  width: 100%;
  height: 100%;
  border-radius: 12px;

  /* Hides the backface of the element when it's rotated away from the viewer */
  backface-visibility: hidden;
  
  /* Center the text content */
  display: flex;
  justify-content: center;
  align-items: center;
  text-align: center;
  padding: 20px;
  box-sizing: border-box;
}

.card-text {
    font-size: 1.5em;
    font-weight: bold;
    user-select: none; /* Prevents text selection on click */
}

/* --- FRONT SIDE (QUESTION) --- */
.card-content.question-side {
    /* Front side is default and remains unrotated */
    background-color: #fff; /* White background for the question side */
    color: #333;
}

/* --- BACK SIDE (ANSWER) --- */
.card-content.answer-side {
    /* To be the back side, it is initially rotated 180 degrees away from the screen */
    transform: rotateY(180deg);
    background-color: #e0f7fa; /* Light blue background for the answer side */
    color: #00796b;
}

/* --- CONTROLS STYLING --- */

.card-controls {
  margin-top: 30px;
}

.card-controls button {
  /* Overrides for a more project-specific look */
  padding: 10px 20px;
  font-size: 1.1em;
  font-weight: 600;
  color: #fff;
  background-color: #4CAF50; /* Green (Project color) */
  border: none;
  /* Resetting boilerplate styles */
  border-color: transparent; 
}

.card-controls button:hover {
  background-color: #45a049;
  border-color: transparent; /* Prevent the blue border hover from boilerplate */
}

.card-controls button:active {
  transform: scale(0.98);
}